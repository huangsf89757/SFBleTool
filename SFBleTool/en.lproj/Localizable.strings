/* 
  Localizable.strings
  SFBleTool

  Created by hsf on 2024/8/7.
  
*/

// # app
CFBundleDisplayName = "BleMessager";

"name" = "BleMessager";
"slogen" = "蓝牙通信，畅享每一刻。";
"copyright" = "Copyright @ 2024-2034";


// # com
"com_edit" = "编辑";
"com_cancel" = "取消";
"com_sure" = "确定";
"com_save" = "保存";


// # user
// ## sign
"user_sign_up" = "注册";
"user_sign_in" = "登录";
"user_sign_out" = "登出";

// ## signIn
// ### mode
"user_signIn_mode" = "登录方式";
"user_signIn_mode_code" = "验证码登录";
"user_signIn_mode_pwd" = "密码登录";

// ### input
"user_signIn_input_account_ph" = "请输入账号/手机号/邮箱号";
"user_signIn_input_code_ph" = "请输入验证码";
"user_signIn_input_pwd_ph" = "请输入密码";

// ### tip
"user_signIn_tip_code" = "未注册的账号将自动注册并登录";
"user_signIn_tip_pwd" = "请使用已注册的账号登录";

// ### agreement
"user_signIn_agreement" = "我已阅读并同意%1$@和%2$@";
"user_signIn_agreement_term" = "《服务条款》";
"user_signIn_agreement_policy" = "《隐私协议》";

// ### action
"user_signIn_action_sendCode" = "发送验证码";
"user_signIn_action_sendCode_counting" = "%1$@秒";
"user_signIn_action_forgetPwd" = "忘记密码？";
"user_signIn_action_signIn" = "登录";

// ## pwdFindback
"user_pwdFindback" = "密码找回";


// ## center
"user_center" = "个人中心";
"user_center_item_central" = "中心设备";
"user_center_item_peripheral" = "外围设备";
"user_center_item_security" = "账号安全";

// ## info
"user_info" = "个人信息";
"user_info_id" = "UID";
"user_info_account" = "账号";
"user_info_avatar" = "头像";
"user_info_nickname" = "昵称";
"user_info_gender" = "性别";
"user_info_gender_unknown" = "未知";
"user_info_gender_male" = "男";
"user_info_gender_female" = "女";
"user_info_motto" = "座右铭";
"user_info_phone" = "手机号";
"user_info_email" = "邮箱号";
"user_info_birthday" = "出生日期";
"user_info_address" = "所在地";



// ## central
"user_central" = "中心设备";

// ## central detail
"user_central_detail_init" = "Initialization Option";
"user_central_detail_scan" = "Scanning Option";
"user_central_detail_connect" = "Connection Option";

// ### central detail (init)
"user_central_detail_init_title_isShowPowerAlert" = "isShowPowerAlert: Bool";
"user_central_detail_init_subtitle_isShowPowerAlert" = "当蓝牙服务不可用时，如果应用实例化中央管理器，系统是否警告用户。";
"user_central_detail_init_key_isShowPowerAlert" = "CBCentralManagerOptionShowPowerAlertKey";

"user_central_detail_init_title_restoreIdentifier" = "restoreIdentifier: String?";
"user_central_detail_init_subtitle_restoreIdentifier" = "中央管理器要实例化的唯一标识符（UID）。\n系统使用此UID标识特定的中央管理器。因此，UID必须保持不变，以便后续执行应用程序来恢复中央管理器。";
"user_central_detail_init_key_restoreIdentifier" = "CBCentralManagerOptionRestoreIdentifierKey";

// ### central detail (scan)
"user_central_detail_scan_title_isAllowDuplicates" = "isAllowDuplicates: Bool";
"user_central_detail_scan_subtitle_isAllowDuplicates" = "是否应在不进行重复筛选的情况下运行扫描。\n如果 `true` ，则中心禁用过滤，并在每次从外围设备接收通告数据包时生成发现事件。\n如果 `false` （默认值），则中心将同一外围设备的多个发现合并为单个发现事件。";
"user_central_detail_scan_key_isAllowDuplicates" = "CBCentralManagerScanOptionAllowDuplicatesKey";

"user_central_detail_scan_title_solicitedServiceUUIDs" = "solicitedServiceUUIDs: [CBUUID]?";
"user_central_detail_scan_subtitle_solicitedServiceUUIDs" = "是要扫描的服务 UUID 数组。\n指定此扫描选项会导致中央管理器还扫描请求阵列中包含的任何服务的外围设备。";
"user_central_detail_scan_key_solicitedServiceUUIDs" = "CBCentralManagerScanOptionSolicitedServiceUUIDsKey";

// ### central detail (connect)
"user_central_detail_connect_title_isEnableAutoReconnect" = "isEnableAutoReconnect: Bool?";
"user_central_detail_connect_subtitle_isEnableAutoReconnect" = "系统是否自动重新连接到外围设备。\n外围设备连接后，此设置使系统能够在链路断开时自动启动与对等设备的连接。系统用于 `centralManager(_:didDisconnectPeripheral:timestamp:isReconnecting:error:)` 通知呼叫者断开连接。";
"user_central_detail_connect_key_isEnableAutoReconnect" = "CBConnectPeripheralOptionEnableAutoReconnect";

"user_central_detail_connect_title_isEnableTransportBridging" = "isEnableTransportBridging: Bool?";
"user_central_detail_connect_subtitle_isEnableTransportBridging" = "是否桥接经典蓝牙技术配置文件。\n如果与同一设备有低功耗的 GATT 连接，此选项会告诉系统在经典蓝牙设备上连接非 GATT 配置文件。\n`true` 值指示系统在连接低能耗传输外围设备时调出经典传输配置文件。\n`false` 值告诉系统不要使用配置文件。";
"user_central_detail_connect_key_isEnableTransportBridging" = "CBConnectPeripheralOptionEnableTransportBridgingKey";

"user_central_detail_connect_title_isNotifyOnConnection" = "isNotifyOnConnection: Bool";
"user_central_detail_connect_subtitle_isNotifyOnConnection" = "指定系统在后台连接外围设备时是否应显示警报。\n此键对于未指定 `bluetooth-central` 后台模式且无法显示自己的警报的应用非常有用。\n如果多个应用请求给定外围设备的通知，则最近处于前台的外围设备将收到警报。\n如果未指定键，则默认值为 `false`。";
"user_central_detail_connect_key_isNotifyOnConnection" = "CBConnectPeripheralOptionNotifyOnConnectionKey";

"user_central_detail_connect_title_isNotifyOnDisconnection" = "isNotifyOnDisconnection: Bool";
"user_central_detail_connect_subtitle_isNotifyOnDisconnection" = "指定在后台断开外围设备连接时系统是否应显示警报。\n此键对于未指定 `bluetooth-central` 后台模式且无法显示自己的警报的应用非常有用。\n如果多个应用请求给定外围设备的通知，则最近处于前台的外围设备将收到警报。\n如果未指定键，则默认值为 `false`。";
"user_central_detail_connect_key_isNotifyOnDisconnection" = "CBConnectPeripheralOptionNotifyOnDisconnectionKey";

"user_central_detail_connect_title_isNotifyOnNotification" = "isNotifyOnNotification: Bool";
"user_central_detail_connect_subtitle_isNotifyOnNotification" = "指定系统是否应针对外围设备发送的任何通知显示警报。\n此键对于未指定 `bluetooth-central` 后台模式且无法显示自己的警报的应用非常有用。\n如果多个应用请求给定外围设备的通知，则最近处于前台的外围设备将收到警报。\n如果未指定键，则默认值为 `false`。\n如果 `true` 为 ，则系统会针对应用挂起时从给定外围设备接收的所有通知显示警报";
"user_central_detail_connect_key_isNotifyOnNotification" = "CBConnectPeripheralOptionNotifyOnNotificationKey";

"user_central_detail_connect_title_isRequiresANCS" = "isRequiresANCS: Bool?";
"user_central_detail_connect_subtitle_isRequiresANCS" = "连接设备时是否需要Apple通知中心服务（ANCS）。";
"user_central_detail_connect_key_isRequiresANCS" = "CBConnectPeripheralOptionRequiresANCS";

"user_central_detail_connect_title_startDelay" = "startDelay: TimeInterval?";
"user_central_detail_connect_subtitle_startDelay" = "指示系统建立连接之前的延迟时间。";
"user_central_detail_connect_key_startDelay" = "CBConnectPeripheralOptionStartDelayKey";



// # entrance
"entrance_opt_central_title" = "中心模式";
"entrance_opt_central_subtitle" = "手机作为中央设备来扫描和连接周围的蓝牙外设";
"entrance_opt_peripheral_title" = "外设模式";
"entrance_opt_peripheral_subtitle" = "手机作为外围设备广播数据";


// # central
// ## ble
"central_ble_scan_doing" = "扫描中";
"central_ble_scan_paused" = "开始扫描";

// ## search
"central_search_ph" = "请输入设备名称";

// ## sort
"central_sort_name" = "名称";
"central_sort_RSSI" = "RSSI";

// ## filter
"central_filter_title" = "过滤";
"central_filter_uuid" = "UUID";
"central_filter_uuid_ph" = "请输入UUID";
"central_filter_RSSI" = "RSSI";
"central_filter_reset" = "重置";
"central_filter_sure" = "确认";

// ## detail
"central_detail_item_adv" = "广播";
"central_detail_item_service" = "服务";
"central_detail_item_log" = "日志";

// ## adv
"central_adv_title_localName" = "Local Name";
"central_adv_subtitle_localName" = "The local name of a peripheral.";
"central_adv_key_localName" = "CBAdvertisementDataLocalNameKey";

"central_adv_title_manufacturer" = "Manufacturer";
"central_adv_subtitle_manufacturer" = "The manufacturer data of a peripheral.";
"central_adv_key_manufacturer" = "CBAdvertisementDataManufacturerDataKey";

"central_adv_title_specificService" = "Specific Service";
"central_adv_subtitle_specificService" = "A dictionary that contains service-specific advertisement data.";
"central_adv_key_specificService" = "CBAdvertisementDataServiceDataKey";

"central_adv_title_serviceUuid" = "Service Uuid";
"central_adv_subtitle_serviceUuid" = "An array of service UUIDs.";
"central_adv_key_serviceUuid" = "CBAdvertisementDataServiceUUIDsKey";

"central_adv_title_overflowUuid" = "Overflow Uuid";
"central_adv_subtitle_overflowUuid" = "An array of UUIDs found in the overflow area of the advertisement data.";
"central_adv_key_overflowUuid" = "CBAdvertisementDataOverflowServiceUUIDsKey";

"central_adv_title_txPower" = "Tx Power";
"central_adv_subtitle_txPower" = "The transmit power of a peripheral.";
"central_adv_key_txPower" = "CBAdvertisementDataTxPowerLevelKey";

"central_adv_title_connectable" = "Connectable";
"central_adv_subtitle_connectable" = "A Boolean value that indicates whether the advertising event type is connectable.";
"central_adv_key_connectable" = "CBAdvertisementDataIsConnectable";

"central_adv_title_solicitedUuid" = "Solicited Uuid";
"central_adv_subtitle_solicitedUuid" = "An array of solicited service UUIDs.";
"central_adv_key_solicitedUuid" = "CBAdvertisementDataSolicitedServiceUUIDsKey";




